syntax = "proto3";

package CloudApi;

option go_package = "go_cloud/cloud_api";

import "google/protobuf/timestamp.proto";

import "block-proto/block_user.proto";
import "block-proto/block_network.proto";

service UserService {
    rpc Create(ApiRequest) returns (ApiResponse) {}
    rpc UpdatePassword(ApiRequest) returns (ApiResponse) {}
    rpc UpdateEmail(ApiRequest) returns (ApiResponse) {}
    rpc UpdateProfile(ApiRequest) returns (ApiResponse) {}
    rpc Get(ApiRequest) returns (ApiResponse) {}
    rpc GetAll(ApiRequest) returns (ApiResponse) {}
    rpc Search(ApiRequest) returns (ApiResponse) {}
    rpc ValidateCredentials(ApiRequest) returns (ApiResponse) {}
    rpc Delete(ApiRequest) returns (ApiResponse) {}
    rpc DeleteNamespace(ApiRequest) returns (ApiResponse) {}
}

service NetworkService {
    rpc Heartbeat(Request) returns (Response) {}
    rpc Invite(ApiRequest) returns (ApiResponse) {}
    rpc Accept(ApiRequest) returns (ApiResponse) {}
    rpc GetConnections(ApiRequest) returns (ApiResponse) {}
    rpc Remove(ApiRequest) returns (ApiResponse) {}
}

message ApiRequest {
    string authToken = 1;
    BlockUser.UserRequest userRequest = 2;
    BlockNetwork.NetworkRequest networkRequest = 3;
}

message ApiResponse {
    BlockUser.UserResponse userResponse = 1;
    BlockNetwork.NetworkResponse networkResponse = 2;
}

message Request {}

message Response {
    string msg = 1;
}