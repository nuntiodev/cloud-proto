syntax = "proto3";

package Cloud;

option go_package = "./go_cloud";

import "google/protobuf/timestamp.proto";

service CloudService {
    rpc Heartbeat(OrganizationRequest) returns (OrganizationResponse) {}
    rpc Create(OrganizationRequest) returns (OrganizationResponse) {}
    rpc CreatePrivateKey(OrganizationRequest) returns (OrganizationResponse) {}
    rpc DeletePrivateKey(OrganizationRequest) returns (OrganizationResponse) {}
    rpc ValidatePrivateKey(OrganizationRequest) returns (OrganizationResponse) {}
    rpc Update(OrganizationRequest) returns (OrganizationResponse) {}
    rpc Get(OrganizationRequest) returns (OrganizationResponse) {}
    rpc GetByOwner(OrganizationRequest) returns (OrganizationResponse) {}
    rpc Delete(OrganizationRequest) returns (OrganizationResponse) {}
}

message Organization {
    string id = 1;
    string owner_id = 2;
    string name = 3;
    string logo = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
    repeated App installed_apps = 7;
}

enum AppType {
    INVALID_APP = 0;
    USER_BLOCK_APP = 1;
    NUNTIO_CONNECT_APP = 2;
}

message App {
    string id = 1;
    string name = 2;
    string description = 3;
    string logo = 4;
    AppType app_type = 5;
}

message PrivateKey {
    string id = 1;
    string organization_id = 2;
    string key = 3;
    google.protobuf.Timestamp private_key_generated_at = 4;
    google.protobuf.Timestamp private_key_secured_at = 5;
    bool private_key_secured = 6;
    repeated string user_block_ids = 7;
}

message OrganizationRequest {
    Organization organization = 1;
    Organization update = 2;
    string access_token = 3;
    PrivateKey private_key = 4;
}

message OrganizationResponse {
    Organization organization = 1;
    repeated Organization organizations = 2;
    string access_token = 3;
}